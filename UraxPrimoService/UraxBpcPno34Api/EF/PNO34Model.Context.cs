//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UraxBpcPno34Api.EF
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class URAXEntities : DbContext
    {
        public static double ParseDouble(string stringvalue)
        {
            return Double.Parse(stringvalue);
        }
        public static string ParseString(string stringvalue)
        {
            return stringvalue.ToString();
        }

        public static string ToPno12SubString(string stringvalue)
        {
            return stringvalue.Substring(0, 12);
        }
        public URAXEntities()
            : base("name=URAXEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<GetMarketData_Result> GetMarketData(string countryCode, Nullable<System.DateTime> priceDate, string taxTerritory)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var priceDateParameter = priceDate.HasValue ?
                new ObjectParameter("PriceDate", priceDate) :
                new ObjectParameter("PriceDate", typeof(System.DateTime));
    
            var taxTerritoryParameter = taxTerritory != null ?
                new ObjectParameter("TaxTerritory", taxTerritory) :
                new ObjectParameter("TaxTerritory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMarketData_Result>("GetMarketData", countryCodeParameter, priceDateParameter, taxTerritoryParameter);
        }
    
        public virtual ObjectResult<GetPno12CommercialData_Result> GetPno12CommercialData(string taxTerritory, string modelYear, string specificationMarket)
        {
            var taxTerritoryParameter = taxTerritory != null ?
                new ObjectParameter("TaxTerritory", taxTerritory) :
                new ObjectParameter("TaxTerritory", typeof(string));
    
            var modelYearParameter = modelYear != null ?
                new ObjectParameter("ModelYear", modelYear) :
                new ObjectParameter("ModelYear", typeof(string));
    
            var specificationMarketParameter = specificationMarket != null ?
                new ObjectParameter("specificationMarket", specificationMarket) :
                new ObjectParameter("specificationMarket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPno12CommercialData_Result>("GetPno12CommercialData", taxTerritoryParameter, modelYearParameter, specificationMarketParameter);
        }
    
        public virtual ObjectResult<GetPno12CommercialDataPrimo_Result> GetPno12CommercialDataPrimo(string taxTerritory, string modelYear, string specificationMarket)
        {
            var taxTerritoryParameter = taxTerritory != null ?
                new ObjectParameter("TaxTerritory", taxTerritory) :
                new ObjectParameter("TaxTerritory", typeof(string));
    
            var modelYearParameter = modelYear != null ?
                new ObjectParameter("ModelYear", modelYear) :
                new ObjectParameter("ModelYear", typeof(string));
    
            var specificationMarketParameter = specificationMarket != null ?
                new ObjectParameter("specificationMarket", specificationMarket) :
                new ObjectParameter("specificationMarket", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPno12CommercialDataPrimo_Result>("GetPno12CommercialDataPrimo", taxTerritoryParameter, modelYearParameter, specificationMarketParameter);
        }
    }
}
